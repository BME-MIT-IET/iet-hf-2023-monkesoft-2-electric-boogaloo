package iet.hf.monkesoft.electric.boogaloo;

import java.io.Serializable;
import java.util.ArrayList;


//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Game.java
//  @ Date : 2022. 03. 23.
//  @ Author :
//
//
public class Game implements Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = 6561132216112946224L;
	private Town Town;
	private static ArrayList<GeneticCode> AllCodes = new ArrayList<>();
	private ArrayList<Effect> AllEffects = new ArrayList<>();
	
	private ArrayList<Virologist> Virologists = new ArrayList<>();
	
	
	Game()
	{
		AllEffects.add(new General());
		AllEffects.add(new Reflect());
		AllEffects.add(new InventoryIncrease());
		AllEffects.add(new Confusion());
		AllEffects.add(new BearConfusion());
		AllEffects.add(new Amnesia());
		AllEffects.add(new Stun());
		
		AllCodes.add(new GeneticCode(AllEffects.get(3).name, AllEffects.get(3), AllEffects.get(3)));
		AllCodes.add(new GeneticCode(AllEffects.get(5).name, AllEffects.get(5), AllEffects.get(5)));
		AllCodes.add(new GeneticCode(AllEffects.get(6).name, AllEffects.get(6), AllEffects.get(6)));
		
		Start();
	}
	
	public void Start() {
		Town = new Town();
	}

	public static boolean CompareG(ArrayList<GeneticCode> g) {
		for (GeneticCode gc : AllCodes) {
			if (!g.contains(gc)) {
				return false;
			}
		}
		return true;
	}
	
	public Town GetTown() {
		return Town;
	}
	public GeneticCode FindGeneticCode(String s)
	{
		GeneticCode res = null;
		for(GeneticCode code : AllCodes)
			if(code.getName().equals(s)) 
				res = code;
		return res;
	}
	public Effect FindEffect(String s) {
		Effect res = null;
		for(Effect e : AllEffects)
			if(e.name.equals(s)) 
				res = e;
		return res;
	}

	// virologists are in turn order
	public Virologist GetActualVirologist() {
		return Virologists.get(0);
	}

	public void AddVirologist(Virologist v) {
		Virologists.add(v);
	}
	// virologist is put back to the end
	public void EndTurn() {

		while(true)
		{
			if(Virologists.size() == 0)
			{
				System.out.println("Everyone has died");
				System.exit(0);
			}
			Virologists.add(Virologists.remove(0));
			boolean hasTurn = Virologists.get(0).YourTurn();
			if(!hasTurn)
			{
				Virologists.remove(0);
				continue;
			}
			break;
		}
	}
	public ArrayList<Virologist> GetVirologists()
	{
		return Virologists;
	}
}
